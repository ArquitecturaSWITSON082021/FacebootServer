<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated Nov 23, 2021 7:39:08 AM by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
    <class name="models.User" table="user" catalog="faceboot" optimistic-lock="version">
        <id name="id" type="java.lang.Integer">
            <column name="id" />
            <generator class="identity" />
        </id>
        <property name="name" type="string">
            <column name="name" length="45" not-null="true" />
        </property>
        <property name="lastName" type="string">
            <column name="last_name" length="45" not-null="true" />
        </property>
        <property name="email" type="string">
            <column name="email" length="100" not-null="true" unique="true" />
        </property>
        <property name="phone" type="string">
            <column name="phone" length="15" not-null="true" unique="true" />
        </property>
        <property name="passwd" type="string">
            <column name="passwd" length="128" not-null="true" />
        </property>
        <property name="bornDate" type="timestamp">
            <column name="born_date" length="19" not-null="true" />
        </property>
        <property name="gender" type="string">
            <column name="gender" length="20" not-null="true" />
        </property>
        <property name="updatedAt" type="timestamp">
            <column name="updated_at" length="19" />
        </property>
        <property name="createdAt" type="timestamp">
            <column name="created_at" length="19" />
        </property>
        <property name="deletedAt" type="timestamp">
            <column name="deleted_at" length="19" />
        </property>
        <set name="userNotifications" table="user_notification" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_id" not-null="true" />
            </key>
            <one-to-many class="models.UserNotification" />
        </set>
        <set name="postAttachments" table="post_attachment" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_id" not-null="true" />
            </key>
            <one-to-many class="models.PostAttachment" />
        </set>
        <set name="postReactions" table="post_reaction" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_id" not-null="true" />
            </key>
            <one-to-many class="models.PostReaction" />
        </set>
        <set name="chatMessagesForUserSenderId" table="chat_message" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_sender_id" not-null="true" />
            </key>
            <one-to-many class="models.ChatMessage" />
        </set>
        <set name="postUserTagsForUserId" table="post_user_tag" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_id" not-null="true" />
            </key>
            <one-to-many class="models.PostUserTag" />
        </set>
        <set name="postUserTagsForUserTagId" table="post_user_tag" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_tag_id" not-null="true" />
            </key>
            <one-to-many class="models.PostUserTag" />
        </set>
        <set name="chatMessagesForUserReceiverId" table="chat_message" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_receiver_id" not-null="true" />
            </key>
            <one-to-many class="models.ChatMessage" />
        </set>
        <set name="postComments" table="post_comment" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_id" not-null="true" unique="true" />
            </key>
            <one-to-many class="models.PostComment" />
        </set>
        <set name="userTokens" table="user_token" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_id" not-null="true" />
            </key>
            <one-to-many class="models.UserToken" />
        </set>
        <set name="posts" table="post" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_id" not-null="true" />
            </key>
            <one-to-many class="models.Post" />
        </set>
        <set name="postHashtags" table="post_hashtag" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="user_id" not-null="true" />
            </key>
            <one-to-many class="models.PostHashtag" />
        </set>
    </class>
</hibernate-mapping>
